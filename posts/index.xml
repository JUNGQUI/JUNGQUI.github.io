<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on QUEUEZ DEV LOG</title>
    <link>https://jungqui.github.io/posts/</link>
    <description>Recent content in Posts on QUEUEZ DEV LOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 20 Oct 2020 21:28:13 +0900</lastBuildDate>
    
	<atom:link href="https://jungqui.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ResolverNhandler</title>
      <link>https://jungqui.github.io/posts/resolvernhandler/</link>
      <pubDate>Tue, 20 Oct 2020 21:28:13 +0900</pubDate>
      
      <guid>https://jungqui.github.io/posts/resolvernhandler/</guid>
      <description>Resolver &amp;amp; Handler? 뜻으로만 보면 resolve 역할을 수행하는 어떠한 것 (er) 이라고 볼 수 있다.</description>
    </item>
    
    <item>
      <title>Oop</title>
      <link>https://jungqui.github.io/posts/oop/</link>
      <pubDate>Mon, 12 Oct 2020 22:16:55 +0900</pubDate>
      
      <guid>https://jungqui.github.io/posts/oop/</guid>
      <description>OOP? Object Oriented Programming 의 앞 글자를 따서 만든 준말이다.</description>
    </item>
    
    <item>
      <title>Gc2</title>
      <link>https://jungqui.github.io/posts/gc2/</link>
      <pubDate>Sat, 10 Oct 2020 13:22:01 +0900</pubDate>
      
      <guid>https://jungqui.github.io/posts/gc2/</guid>
      <description>GC? 다시 돌아온 GC 설명이다. Garbage Collector 의 줄임말이다.
왜 알아야 하나?</description>
    </item>
    
    <item>
      <title>Ehcache</title>
      <link>https://jungqui.github.io/posts/ehcache/</link>
      <pubDate>Fri, 09 Oct 2020 20:05:43 +0900</pubDate>
      
      <guid>https://jungqui.github.io/posts/ehcache/</guid>
      <description>Ehcache? cache 다. 위키피디아 에 다음과 같이 정의되어 있다.
 캐시(cache, 문화어: 캐쉬, 고속완충기, 고속완충기억기)는 컴퓨터 과학에서 데이터나 값을 미리 복사해 놓는 임시 장소를 가리킨다.</description>
    </item>
    
    <item>
      <title>Solid</title>
      <link>https://jungqui.github.io/posts/solid/</link>
      <pubDate>Sat, 26 Sep 2020 18:34:42 +0900</pubDate>
      
      <guid>https://jungqui.github.io/posts/solid/</guid>
      <description>SOLID? 객체지향 프로그래밍 패턴 원칙들의 약자다.
SOLID 는 각각 SRP(단일 책임 원칙), OCP(개방-폐쇄 원칙), LSP(리스코프 치환 원칙), ISP(인터페이스 분리 원칙), DIP(의존 역전 원칙) 로 이루어져 있고, 앞 단어를 따서 만든 약어이다.</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://jungqui.github.io/posts/git/</link>
      <pubDate>Fri, 25 Sep 2020 11:22:38 +0900</pubDate>
      
      <guid>https://jungqui.github.io/posts/git/</guid>
      <description>git? Version Control System 의 약어인 VCS 중 가장 강력한 tool 이다.</description>
    </item>
    
    <item>
      <title>Graphql</title>
      <link>https://jungqui.github.io/posts/graphql/</link>
      <pubDate>Mon, 21 Sep 2020 20:58:34 +0900</pubDate>
      
      <guid>https://jungqui.github.io/posts/graphql/</guid>
      <description>graphQL? facebook 에서 개발한 쿼리 언어이다.
그렇다면 진행하기 앞서 쿼리 언어란 무엇인가에 대해 알아봐야 할 것이다.</description>
    </item>
    
    <item>
      <title>Querydsl</title>
      <link>https://jungqui.github.io/posts/querydsl/</link>
      <pubDate>Wed, 16 Sep 2020 22:10:56 +0900</pubDate>
      
      <guid>https://jungqui.github.io/posts/querydsl/</guid>
      <description>queryDSL? 배경은 ORM 에서 시작했다.
기본적으로 ORM 은 Object-Relation Mapping 이다.</description>
    </item>
    
    <item>
      <title>Exception</title>
      <link>https://jungqui.github.io/posts/exception/</link>
      <pubDate>Mon, 14 Sep 2020 13:37:52 +0900</pubDate>
      
      <guid>https://jungqui.github.io/posts/exception/</guid>
      <description>Exception? 단어적인 뜻으로는 예외 라는 의미를 가지고 있다.
일반적으로 어떠한 약속을 제정할 때 이럴 경우 특수하니 일반적으로 처리하지 않는다.</description>
    </item>
    
    <item>
      <title>Transaction</title>
      <link>https://jungqui.github.io/posts/transaction/</link>
      <pubDate>Thu, 10 Sep 2020 11:18:19 +0900</pubDate>
      
      <guid>https://jungqui.github.io/posts/transaction/</guid>
      <description>Transaction? 위키피디아의 정의에서 transaction은 데이터베이스 트랜잭션(Database Transaction)은 데이터베이스 관리 시스템 또는 유사한 시스템에서 상호작용의 단위이다.</description>
    </item>
    
    <item>
      <title>Stream</title>
      <link>https://jungqui.github.io/posts/stream/</link>
      <pubDate>Tue, 08 Sep 2020 15:07:43 +0900</pubDate>
      
      <guid>https://jungqui.github.io/posts/stream/</guid>
      <description>Stream? 사전적 의미로는 개울을 의미한다. 그래서 &amp;lsquo;정보가 개울의 물처럼 연속적으로 흐르는 것&amp;rsquo; 이라는 느낌으로 data stream 등으로 이름을 지었다고 한다.</description>
    </item>
    
    <item>
      <title>Lambda</title>
      <link>https://jungqui.github.io/posts/lambda/</link>
      <pubDate>Mon, 07 Sep 2020 13:38:49 +0900</pubDate>
      
      <guid>https://jungqui.github.io/posts/lambda/</guid>
      <description>Lambda? 대표적으로는 그리스어의 람다가 있다.
그리고 수학적으로는 람다식이라는 것이 있는데 이 부분이 개발에서 쓰이는 lambda expression 과 유사하다고 볼 수 있다.</description>
    </item>
    
    <item>
      <title>Lock</title>
      <link>https://jungqui.github.io/posts/lock/</link>
      <pubDate>Thu, 03 Sep 2020 09:54:12 +0900</pubDate>
      
      <guid>https://jungqui.github.io/posts/lock/</guid>
      <description>Lock? 사전적 용어로 &amp;lsquo;잠금&amp;rsquo; 을 뜻한다. 그렇다면 왜 개발에서 lock 이라는 개념이 나왔을까.</description>
    </item>
    
    <item>
      <title>Static</title>
      <link>https://jungqui.github.io/posts/static/</link>
      <pubDate>Tue, 01 Sep 2020 20:47:06 +0900</pubDate>
      
      <guid>https://jungqui.github.io/posts/static/</guid>
      <description>static? 보통 &amp;lsquo;정적&amp;rsquo; 이라는 단어가 붙어 있는 case 가 있는데 정적 variable, 정적 method 을 지칭한다.</description>
    </item>
    
    <item>
      <title>ProcessNthread</title>
      <link>https://jungqui.github.io/posts/processnthread/</link>
      <pubDate>Mon, 31 Aug 2020 16:32:43 +0900</pubDate>
      
      <guid>https://jungqui.github.io/posts/processnthread/</guid>
      <description>Program? Process? Thread? Program 다음은 나무 위키에서의 program 에 대한 정의 중 일부 발췌문이다.</description>
    </item>
    
    <item>
      <title>Gc</title>
      <link>https://jungqui.github.io/posts/gc/</link>
      <pubDate>Thu, 27 Aug 2020 13:30:14 +0900</pubDate>
      
      <guid>https://jungqui.github.io/posts/gc/</guid>
      <description>GC? Garbage collector 의 약자로 말 그대로 쓰레기 수집기 이다.</description>
    </item>
    
    <item>
      <title>Jvm</title>
      <link>https://jungqui.github.io/posts/jvm/</link>
      <pubDate>Thu, 27 Aug 2020 10:59:24 +0900</pubDate>
      
      <guid>https://jungqui.github.io/posts/jvm/</guid>
      <description>JVM? Java Virtual Machine 의 약자로 말 그대로 java 를 돌리기 위해 가상으로 Computer 의 자원을 가진 존재이다.</description>
    </item>
    
  </channel>
</rss>